#!/usr/bin/env bash
# ssh-cluster/sync-all -- sync repository with cluster via ssh
# 
# > . find-runner.sh -
# > sync-all _3X_WORKER_DIR
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2014-02-24
set -eu
. runner.sh
. remote-runner.sh

_3X_WORKER_DIR=$1; shift
_3X_WORKER_ID=${_3X_WORKER_DIR#$WORKER_DIR_PREFIX}

cd "$_3X_WORKER_DIR"

export _3x=$(useTargetOrRunnerConfig 3x-path +3 "3X installation path at remote hosts:")
sharedPath=$(useTargetOrRunnerConfig shared-path +2 "shared path at remote hosts:")
set -- $(cat remotes 2>/dev/null || true)

# rsync working dir as well as runs.finished
for splitRemote in runSplit.*.remote; do
    split=${splitRemote%.remote}
    remote=$(cat $splitRemote)
    parseRemote $remote
    runner-msg "fetching RUNNING runs from $remote"
    rsyncFromRemote "$_3X_WORKER_ID"/run/ \
        --archive --hard-links --copy-unsafe-links --omit-dir-times \
        "$_3X_ROOT"/run/ &
    # also get runs.finished
    rsyncFromRemote "$_3X_WORKER_ID"/runs.finished ${split}.finished &
done
wait

# rsync from remote-repository
remote=$1 # XXX arbitrarily picking first remote
parseRemote $remote
remoteRoot="$sharedPath/$_3X_WORKER_ID"
remote=$(getParsedRemoteURL)
runner-msg "fetching finished runs from $remote"
rsyncFromRemote . --include=/{.3x{,/files},run} --exclude=/{,.3x/}* \
    --archive --hard-links --copy-unsafe-links --omit-dir-times \
    "$_3X_ROOT"/

# mark finished runs in the queue
runner-msg "marking finished runs"
rm -f runSerials.*
cat runSplit.*.finished |
awk '{ file="runSerials."$1; print $2 >>file }'
for state in DONE FAILED; do
    [[ -s "runSerials.$state" ]] || continue
    xargs queue mark-as "$state" <"runSerials.$state"
done

# index finished runs
runner-msg "indexing finished runs"
cat runSplit.*.finished | awk '{print $3}' |
(cd "$_3X_ROOT" && xargs 3x-index update)

# if all splits are finished, clean up
if [[ $(cat runSerials.* | wc -l) -eq $(wc -l <runSerials) ]]; then
    runner-msg "all runs finished, cleaning up $# remote hosts"
    for remote; do
        parseRemote $remote
        runner-msg +1 "cleaning up $remote"
        sshRemote "$_3x" remote "$sharedPath" "$_3X_WORKER_ID" \
            cleanup "$remoteRoot"
    done
    cd - >/dev/null
    rm -rf "$_3X_WORKER_DIR"

    queue-refresh
fi
