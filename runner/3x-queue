#!/usr/bin/env bash
# 3x-queue -- list queues and their stats and select the current queue
# 
# > 3x queue
# Lists existing queues with some statistics.
# 
# > 3x queue QUEUE [TARGET]
# Switches the current queue to given QUEUE.  Optionally, sets the target of
# QUEUE to the given TARGET.
# 
# > 3x queue -h
# Shows this usage.
# 
# > 3x target
# Manages the target execution environment for the current queue.
# 
# > 3x status
# Shows the full execution history of the current queue.
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2013-01-12
set -eu
TAB=$'\t'
tsvline() {
    local line= col=
    for col
    do line+="$TAB$col"
    done
    echo "${line#$TAB}"
}

ListDetails=true
ShowCount=false
while getopts "clh" o; do
    case $o in
        c) ShowCount=true ListDetails=false ;;
        l) ListDetails=false ;;
        h) exec usage "$0" ;;
    esac
done
shift $(($OPTIND - 1))

_3X_ROOT=$(3x-findroot)

# switch the current queue to given one
if $ListDetails && [ $# -gt 0 ]; then
    _3X_QUEUE=$1; shift
    . find-queue.sh
    ln -sfn ../$_3X_QUEUE_ID "$_3X_ROOT"/.3x/Q
    mkdir -p "$_3X_QUEUE_DIR"
    queue init
    # set the queue's target if given as well
    [ $# -eq 0 ] || 3x-target "$1" >/dev/null
    set --
else
    . find-queue.sh
fi

# prepare the query for listing
cd "$_3X_ROOT"/run/queue
[ $# -gt 0 ] || set -- ""
Query=(); for q; do Query+=(*"$q"*/); done
set -- "${Query[@]}"

# list queues
limitOffset ls -td "$@" 2>/dev/null |
if $ListDetails; then
    NBSP='Â '
    {
    tsvline \
        "#" \
        "QUEUE" \
        "STATE" \
        "#PLANNED" \
        "#RUNNING" \
        "#ABORTED" \
        "#FAILED" \
        "#DONE" \
        "TARGET" \
        #
    while read -r queue; do
        queue=${queue%/}
        current=$NBSP
        [ x"$_3X_QUEUE" != x"$queue" ] || current="*"
        # refresh queue state
        # XXX modifying _3X_QUEUE_DIR is fragile
        (
        _3X_QUEUE=$queue _3X_QUEUE_DIR="$PWD/$queue"
        # XXX no queue-refresh here: 3x-queue simply displays the current queue status
        #     3x-sync is for invoking queue-refresh
        {
            state=INACTIVE
            ! queue-is-active || state=ACTIVE
            eval "$(queue countByState)"
            target=$(readlink $queue/target || echo '?')
            target=${target##*/}
        }
        # output in tab-separated columns
        tsvline \
            "$current" \
            "$queue" \
            "$state" \
            "${numPLANNED:-0}" \
            "${numRUNNING:-0}" \
            "${numABORTED:-0}" \
            "${numFAILED:-0}" \
            "${numDONE:-0}" \
            "$target" \
            #
        )
    done
    } |
    color-marked-row '* '
elif $ShowCount; then
    wc -l
else
    sed 's:/$::'
fi
