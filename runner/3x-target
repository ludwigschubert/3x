#!/usr/bin/env bash
# 3x-target -- manage target execution environments
# 
# > 3x target
# Lists target execution environments already defined.
# 
# > 3x target TARGET
# Configures the current queue to execute planned runs at TARGET.
# 
# > 3x target TARGET info
# Displays detailed information of the TARGET execution environment.
# 
# > 3x target -h
# Shows this usage.
# 
# > 3x target TARGET define TYPE [ARG]...
# Defines the TARGET as an execution environment of type TYPE.  Optional ARGs
# may vary depending on TYPE.  Available TYPEs are as follows:
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2013-06-26
set -eu

. find-queue.sh

while getopts "h" o; do
    case $o in
        h)
            usage "$0"
            for targetDefine in "$_3X_RUNNER_HOME"/*/target-define; do
                [ -x "$targetDefine" ] || continue
                usage "$targetDefine"
            done
            exit
            ;;
    esac
done
shift $(($OPTIND - 1))

target-exists() {
    local t=$1
    local targetDir="$_3X_ROOT"/run/target/"$t"
    [ -d "$targetDir" ] && [ -r "$targetDir"/type ]
}
target-must-exist() {
    local t=$1
    target-exists "$t" || error "$t: No such target"
}
load-target() {
    local t=$1
    local targetDir="$_3X_ROOT"/run/target/"$t"
    runner=$(cat "$targetDir"/type)
} 2>/dev/null

# decide what to do based on the number of given arguments
if [ $# -eq 0 ]; then
    Target=$(readlink "$_3X_QUEUE_DIR"/target || echo '?')
    Target=${Target##*/}
elif [ $# -eq 1 ]; then
    # set given target for the current queue
    Target=$1
    # make sure it is a valid target
    target-must-exist "$Target"
    # TODO disallow target switching when it is active
    # place a symlink in the queue
    mkdir -p "$_3X_QUEUE_DIR"
    ln -sfn ../../target/$Target "$_3X_QUEUE_DIR"/target
else # [ $# -gt 1 ]
    Target=$1; shift
    # TODO sanitize $Target name
    Command=$1; shift
    case $Command in
        define)
            [ $# -gt 0 ] || usage "$0" "Specify the TYPE of target to define"
            Type=$1; shift
            # some sanity checks first
            runnerDir="$_3X_RUNNER_HOME/$Type"
            [ -x "$runnerDir"/target-define ] ||
                error "$Type: Unknown target execution environment type"
            if target-exists "$Target"; then
                load-target "$Target"
                [ x"$runner" = x"$Type" ] ||
                    error "$Target: Unable to change type of an existing target ($runner -> $Type)"
            fi
            # define the given target
            . find-runner.sh "$Type"
            target-define "$Target" "$@"
            exec target-info "$Target"
            ;;
        info)
            target-must-exist "$Target"
            load-target "$Target"
            . find-runner.sh "$runner"
            exec target-info "$Target" "$@"
            ;;
        *)
            error "$Command: unknown command for target $Target"
            ;;
    esac
fi

# list available targets
cd "$_3X_ROOT"/run/target
ls -d */ |
{
NBSP='Â '
echo "#$(printf '\t%s' \
    "TARGET" \
    "TYPE" \
    #
)"
while read t; do
    t=${t%/}
    current=$NBSP
    [ x"$t" != x"$Target" ] || current='*'
    echo "$current$(
    load-target $t
    printf '\t%s' \
        "$t" \
        "$runner" \
        #
    )"
done
} |
color-marked-row '* '
