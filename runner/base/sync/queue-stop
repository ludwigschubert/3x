#!/usr/bin/env bash
# > 3x stop WORKER_ID...
# Stops workers identified by given WORKER_IDs.  WORKER_ID is a unique number
# assigned to each local worker.  0 is first assigned, and incremented by 1 as
# new local workers are started.
#
# queue-stop -- stops executing workers for current queue
# 
# > . find-runner.sh -
# > setsid queue-stop [WORKER]
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2012-11-17
set -eu
. runner.sh

# collect the handles of workers
if [ $# -gt 0 ]; then
    handles=()
    for workerId; do
        handle=$WORKER_LOCK_PREFIX"$workerId".lock
        [ -e "$handle" ] || error "No such worker #$workerId" || continue
        handles+=("$handle")
    done
    set -- "${handles[@]}"
else
    set -- $WORKER_LOCK_PREFIX*.lock $RUNDIR_PREFIX*/lock
fi

# and stop the workers
for handle; do
    [ -e "$handle" ] || continue
    lockproc "$handle" kill || true
done

# reflect the queue state
queue-refresh
