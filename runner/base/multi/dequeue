#!/usr/bin/env bash
# dequeue -- execute runs in the plan and running list of current queue and
#            move finished ones to the done list
# See runner.sh for extending and overriding base runners behavior.
# 
# Usage:
# > . runner.sh
# > dequeue
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2013-07-11
set -eu
. multi-runner.sh

: ${_3X_BATCH_SIZE:=}


# resume previous work if any
if [ -s "$_3X_WORKER_DIR"/runSerials ]; then
    drop-finished-runs
    xargs <"$_3X_WORKER_DIR"/runSerials         queue mark-as RUNNING
fi
# dequeue more runs (if necessary)
queue pick "$_3X_BATCH_SIZE" RUNNING >>"$_3X_WORKER_DIR"/runSerials

[ -s "$_3X_WORKER_DIR"/runSerials ] ||
    runner-error "No PLANNED runs in queue"

# keep a full listing of the runs to be executed
for-picked-runs list |
sed 's/^[^[:space:]]*[[:space:]]//; s/[[:space:]]*#.*$//' >"$_3X_WORKER_DIR"/runArgs
for-picked-runs list-only runId >"$_3X_WORKER_DIR"/runIds


# mark as ABORTED upon queue-stop or interrupt
exit-after-marking-as-aborted() {
    c=$?
    [[ $# -gt 0 ]] || set -- "$(cat "$_3X_WORKER_DIR"/target.aborted.cause)"
    runner-error "${*:-Execution aborted due to error}" || true
    # mark all unfinished runs as ABORTED
    drop-finished-runs
    xargs <"$_3X_WORKER_DIR"/runSerials         queue mark-as ABORTED
    # create target.aborted in each run dir
    {
        [[ $# -eq 0 ]] || echo "$*"
        cat "$_3X_WORKER_DIR"/error 2>/dev/null || true
    } >"$_3X_WORKER_DIR"/target.aborted
    cd "$_3X_ROOT"
    for-picked-runs list-only runId >"$_3X_WORKER_DIR"/runIds
    xargs <"$_3X_WORKER_DIR"/runIds         mkdir -p
    #XXX xargs <"$_3X_WORKER_DIR"/runIds         chmod +w
    xargs <"$_3X_WORKER_DIR"/runIds -L1     ln -f "$_3X_WORKER_DIR"/target.aborted
    #XXX xargs <"$_3X_WORKER_DIR"/runIds         chmod -w
    exit $c
}
rm -f "$_3X_WORKER_DIR"/target.aborted.cause
for sig in INT QUIT TERM; do
    case $sig in
        TERM) msg="Execution stopped" ;;
        *) msg="Execution interrupted" ;;
    esac
    trap 'echo "'"$msg"'" >>"$_3X_WORKER_DIR"/target.aborted.cause' $sig
done


      count=$(wc -l   <"$_3X_WORKER_DIR"/runSerials)
firstSerial=$(head -1 <"$_3X_WORKER_DIR"/runSerials)
 lastSerial=$(tail -1 <"$_3X_WORKER_DIR"/runSerials)
runner-msg "Executing #$firstSerial through #$lastSerial ($count runs)"

_3X_LOGERROR="$_3X_WORKER_DIR"/error \
run-all "$_3X_WORKER_DIR" ||
    exit-after-marking-as-aborted
